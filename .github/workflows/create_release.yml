# Copyright (c) 2023, Salesforce, Inc.
# SPDX-License-Identifier: Apache-2

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: create release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: get pushed tag
        id: get_pushed_tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

      - uses: actions/checkout@v4

      - run: git archive --output=rules_docker_compose-${{ steps.get_pushed_tag.outputs.TAG }}.tar.gz ${{ steps.get_pushed_tag.outputs.TAG }}

      - name: get SHA256 of archive
        id: get_sha
        run: echo "::set-output name=sha::$(sha256sum rules_docker_compose-${{ steps.get_pushed_tag.outputs.TAG }}.tar.gz | cut -f 1 -d ' ')"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ```
            http_archive(
                name = "rules_docker_compose",
                sha256 = "${{ steps.get_sha.outputs.sha }}",
                urls = ["https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/releases/download/${{ steps.get_pushed_tag.outputs.TAG }}/rules_docker_compose-${{ steps.get_pushed_tag.outputs.TAG }}.tar.gz"],
            )

            load("@rules_docker_compose//:repositories.bzl", "rules_docker_compose_repositories")
            rules_docker_compose_repositories()

            load("@rules_docker_compose//:setup.bzl", "rules_docker_compose_dependencies", "repo_absolute_path")
            rules_docker_compose_dependencies()
            repo_absolute_path(name="repo_absolute_path")
            ```
          generate_release_notes: true
          files: rules_docker_compose-${{ steps.get_pushed_tag.outputs.TAG }}.tar.gz
